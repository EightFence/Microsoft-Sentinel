{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/99d589fa-7337-40d7-91a0-c96d0c4fa437')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/99d589fa-7337-40d7-91a0-c96d0c4fa437')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "metadata": {
          "support": {
            "tier": "Community"
          },
          "categories": {
            "domains": [
              "Security - Others",
              "Identity"
            ]
          },
          "source": {
            "kind": "Community"
          },
          "author": {
            "name": "Microsoft Security Research"
          }
        },
        "name": "Account created from non-approved sources",
        "severity": "Medium",
        "description": "'This query looks for an account being created from a domain that is not regularly seen in a tenant.\n  Attackers may attempt to add accounts from these sources as a means of establishing persistant access to an environment.\n  Created accounts should be investigated to confirm expected creation.\n  Ref: https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-user-accounts#short-lived-accounts'\n",
        "tactics": [
          "Persistence"
        ],
        "queryPeriod": "7d",
        "entityMappings": [
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "columnName": "AddedByName",
                "identifier": "Name"
              },
              {
                "columnName": "AddedByUPNSuffix",
                "identifier": "UPNSuffix"
              },
              {
                "columnName": "AddedByAzureId",
                "identifier": "AadUserId"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "columnName": "UserAddedName",
                "identifier": "Name"
              },
              {
                "columnName": "UserAddedDomain",
                "identifier": "UPNSuffix"
              }
            ]
          }
        ],
        "queryFrequency": "1d",
        "query": "let core_domains = (SigninLogs\n  | where TimeGenerated > ago(7d)\n  | where ResultType == 0\n  | extend domain = tolower(split(UserPrincipalName, \"@\")[1])\n  | summarize by tostring(domain));\n  let alternative_domains = (SigninLogs\n  | where TimeGenerated > ago(7d)\n  | where isnotempty(AlternateSignInName)\n  | where ResultType == 0\n  | extend domain = tolower(split(AlternateSignInName, \"@\")[1])\n  | summarize by tostring(domain));\n  AuditLogs\n  | where TimeGenerated > ago(1d)\n  | where OperationName =~ \"Add User\"\n  | extend AddingUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\n  | extend AddingSPN = tostring(parse_json(tostring(InitiatedBy.app)).servicePrincipalName)\n  | extend AddedBy = iif(isnotempty(AddingUser), AddingUser, AddingSPN)\n  | extend UserAdded = tostring(TargetResources[0].userPrincipalName)\n  | extend AddedByUserId = tostring(parse_json(tostring(InitiatedBy.user)).id)\n  | extend AddedBySPNId = tostring(parse_json(tostring(InitiatedBy.app)).servicePrincipalId)\n  | extend AddedByAzureId = iif(isnotempty(AddedByUserId), AddedByUserId, AddedBySPNId)\n  | extend UserAddedDomain = case(\n  UserAdded has \"#EXT#\", tostring(split(tostring(split(UserAdded, \"#EXT#\")[0]), \"_\")[1]),\n  UserAdded !has \"#EXT#\" and AddedBy has \"@\", tostring(split(UserAdded, \"@\")[1]),\n  UserAdded)\n  | where UserAddedDomain !in (core_domains) and UserAddedDomain !in (alternative_domains)\n  | project-away AddingUser\n  | extend AddedByName = case(\n  AddedBy has \"#EXT#\", tostring(split(tostring(split(AddedBy, \"#EXT#\")[0]), \"_\")[0]),\n  AddedBy !has \"#EXT#\" and AddedBy has \"@\", tostring(split(AddedBy, \"@\")[0]),\n  AddedBy)\n  | extend AddedByUPNSuffix = case(\n  AddedBy has \"#EXT#\", tostring(split(tostring(split(AddedBy, \"#EXT#\")[0]), \"_\")[1]),\n  AddedBy !has \"#EXT#\" and AddedBy has \"@\", tostring(split(AddedBy, \"@\")[1]),\n  AddedBy)\n  | extend UserAddedName = case(\n  UserAdded has \"#EXT#\", tostring(split(tostring(split(UserAdded, \"#EXT#\")[0]), \"_\")[0]),\n  UserAdded !has \"#EXT#\" and AddedBy has \"@\", tostring(split(UserAdded, \"@\")[0]),\n  UserAdded)\n  | project-reorder TimeGenerated, UserAdded, UserAddedDomain, AddedBy\n",
        "triggerOperator": "gt",
        "triggerThreshold": 0
      }
    }
  ]
}
