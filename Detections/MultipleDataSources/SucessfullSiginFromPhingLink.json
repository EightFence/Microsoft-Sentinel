{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/779731f7-8ba0-4198-8524-5701b7defddc')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/779731f7-8ba0-4198-8524-5701b7defddc')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "tactics": [
          "PrivilegeEscalation"
        ],
        "triggerThreshold": 0,
        "name": "M365D Alerts Correlation to non-Microsoft Network device network activity involved in successful sign-in Activity",
        "description": "'This content is employed to correlate with Microsoft Defender XDR phishing-related alerts. It focuses on instances where a user successfully connects to a phishing URL from a non-Microsoft network device and subsequently makes successful sign-in attempts from the phishing IP address.'\n",
        "severity": "Medium",
        "queryPeriod": "1d",
        "triggerOperator": "gt",
        "metadata": {
          "source": {
            "kind": "Community"
          },
          "categories": {
            "domains": [
              "Security - Threat Protection"
            ]
          },
          "support": {
            "tier": "Community"
          },
          "author": {
            "name": "Arjun Trivedi"
          }
        },
        "queryFrequency": "1d",
        "entityMappings": [
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "columnName": "UserPrincipalName",
                "identifier": "FullName"
              },
              {
                "columnName": "Name",
                "identifier": "Name"
              },
              {
                "columnName": "UPNSuffix",
                "identifier": "UPNSuffix"
              }
            ]
          },
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "columnName": "DestinationIP",
                "identifier": "Address"
              }
            ]
          },
          {
            "entityType": "DNS",
            "fieldMappings": [
              {
                "columnName": "DestinationHostName",
                "identifier": "DomainName"
              }
            ]
          },
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "columnName": "SourceSystem",
                "identifier": "FullName"
              }
            ]
          },
          {
            "entityType": "URL",
            "fieldMappings": [
              {
                "columnName": "RequestURL",
                "identifier": "Url"
              }
            ]
          }
        ],
        "query": "let Alert_List= dynamic([\n\"Phishing link click observed in Network Traffic\",\n\"Phish delivered due to an IP allow policy\",\n\"A potentially malicious URL click was detected\",\n\"High Risk Sign-in Observed in Network Traffic\",\n\"A user clicked through to a potentially malicious URL\",\n\"Suspicious network connection to AitM phishing site\",\n\"Messages containing malicious entity not removed after delivery\",\n\"Email messages containing malicious URL removed after delivery\",\n\"Email reported by user as malware or phish\",\n\"Phish delivered due to an ETR override\",\n\"Phish not zapped because ZAP is disabled\"]);\nSecurityAlert\n| where AlertName in~ (Alert_List)\n//Findling Alerts which has the URL\n| where Entities has \"url\"\n//extracting Entities\n| extend Entities = parse_json(Entities)\n| mv-apply Entity = Entities on\n    (\n    where Entity.Type == 'url'\n    | extend EntityUrl = tostring(Entity.Url)\n    )\n| summarize\n    Url=tostring(tolower(take_any(EntityUrl))),\n    AlertTime= min(TimeGenerated),\n    make_set(SystemAlertId, 100)\n    by ProductName, AlertName\n// matching with 3rd party network logs and 3p Alerts\n| join kind= inner (CommonSecurityLog\n    | where DeviceVendor has_any  (\"Palo Alto Networks\", \"Fortinet\", \"Check Point\", \"Zscaler\")\n    | where DeviceProduct startswith \"FortiGate\" or DeviceProduct startswith  \"PAN\" or DeviceProduct startswith  \"VPN\" or DeviceProduct startswith \"FireWall\" or DeviceProduct startswith  \"NSSWeblog\" or DeviceProduct startswith \"URL\"\n    | where DeviceAction != \"Block\"\n    | where isnotempty(RequestURL)\n    | project\n        3plogTime=TimeGenerated,\n        DeviceVendor,\n        DeviceProduct,\n        Activity,\n        DestinationHostName,\n        DestinationIP,\n        RequestURL=tostring(tolower(RequestURL)),\n        MaliciousIP,\n        SourceUserName=tostring(tolower(SourceUserName)),\n        IndicatorThreatType,\n        ThreatSeverity,\n        ThreatConfidence,\n        SourceUserID,\n        SourceHostName)\n    on $left.Url == $right.RequestURL\n// matching successful Login from suspicious IP\n| join kind=inner (SigninLogs\n    //filtering the Successful Login\n    | where ResultType == 0\n    | project\n        IPAddress,\n        SourceSystem,\n        SigniningTime= TimeGenerated,\n        OperationName,\n        ResultType,\n        ResultDescription,\n        AlternateSignInName,\n        AppDisplayName,\n        AuthenticationRequirement,\n        ClientAppUsed,\n        RiskState,\n        RiskLevelDuringSignIn,\n        UserPrincipalName=tostring(tolower(UserPrincipalName)),\n        Name = tostring(split(UserPrincipalName, \"@\")[0]),\n        UPNSuffix =tostring(split(UserPrincipalName, \"@\")[1]))\n    on $left.DestinationIP == $right.IPAddress and $left.SourceUserName == $right.UserPrincipalName\n| where SigniningTime between ((AlertTime - 6h) .. (AlertTime + 6h)) and 3plogTime between ((AlertTime - 6h) .. (AlertTime + 6h))\n"
      }
    }
  ]
}
