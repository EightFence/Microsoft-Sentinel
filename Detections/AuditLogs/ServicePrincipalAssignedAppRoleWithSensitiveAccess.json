{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/dd78a122-d377-415a-afe9-f22e08d2112c')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/dd78a122-d377-415a-afe9-f22e08d2112c')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "description": "'Detects a Service Principal being assigned an app role that has sensitive access such as Mail.Read.\n  A threat actor who compromises a Service Principal may assign it an app role to allow it to access sensitive data, or to perform other actions.\n  Ensure that any assignment to a Service Principal is valid and appropriate.\n  Ref: https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-applications#application-granted-highly-privileged-permissions'\n",
        "triggerThreshold": 0,
        "triggerOperator": "gt",
        "query": "// Add other permissions to this list as needed\n  let permissions = dynamic([\"Mail.Read\", \"offline_access\", \"Files.Read\", \"Notes.Read\", \"ChannelMessage.Read\", \"Chat.Read\", \"TeamsActivity.Read\",\n  \"Group.Read\", \"EWS.AccessAsUser.All\", \"EAS.AccessAsUser.All\"]);\n  AuditLogs\n  | where OperationName =~ \"Add app role assignment to service principal\"\n  | mv-expand TargetResources[0].modifiedProperties\n  | extend TargetResources_0_modifiedProperties = column_ifexists(\"TargetResources_0_modifiedProperties\", '')\n  | where isnotempty(TargetResources_0_modifiedProperties)\n  | where TargetResources_0_modifiedProperties.displayName =~ \"AppRole.Value\" or TargetResources_0_modifiedProperties.displayName =~ \"DelegatedPermissionGrant.Scope\"\n  | extend Permissions = split((parse_json(tostring(TargetResources_0_modifiedProperties.newValue))), \" \")\n  | where Permissions has_any (permissions)\n  | summarize AddedPermissions=make_set(Permissions,200) by CorrelationId\n  | join kind=inner (AuditLogs\n  | where OperationName =~ \"Add app role assignment to service principal\") on CorrelationId\n  | extend InitiatedBy = tostring(iff(isnotempty(InitiatedBy.user.userPrincipalName),InitiatedBy.user.userPrincipalName, InitiatedBy.app.displayName))\n  | extend ServicePrincipal = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[4].newValue)))\n  | extend SPID = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[6].newValue)))\n  | extend InitiatedBy = pack(\"User\", InitiatedBy, \"UA\", column_ifexists(\"UserAgent\",''), \"IPAddress\", column_ifexists(\"IpAddress\",''))\n  | mv-expand kind=array AddedPermissions\n  | summarize FirstSeen = min(TimeGenerated), LastSeen = max(TimeGenerated), make_set(InitiatedBy,200), make_set(AddedPermissions,200) by SPID, ServicePrincipal\n",
        "queryFrequency": "1d",
        "name": "Service Principal Assigned App Role With Sensitive Access",
        "entityMappings": [
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "ServicePrincipal"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "AadUserId",
                "columnName": "SPID"
              }
            ]
          }
        ],
        "metadata": {
          "categories": {
            "domains": [
              "Security - Others",
              "Identity"
            ]
          },
          "support": {
            "tier": "Community"
          },
          "source": {
            "kind": "Community"
          },
          "author": {
            "name": "Pete Bryan"
          }
        },
        "queryPeriod": "1d",
        "severity": "Medium",
        "tactics": [
          "PrivilegeEscalation"
        ]
      }
    }
  ]
}
