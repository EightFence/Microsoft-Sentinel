{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/cd19434e-10f2-4e2f-b3c1-ce6f08ac5357')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/cd19434e-10f2-4e2f-b3c1-ce6f08ac5357')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "query": "let dt_lookBack = 1h;  // Define the time range to look back for syslog data (1 hour)\nlet ioc_lookBack = 14d;  // Define the time range to look back for threat intelligence indicators (14 days)\n// Create a list of top-level domains (TLDs) from the threat feed for later validation\nlet list_tlds = ThreatIntelIndicators\n | where TimeGenerated > ago(ioc_lookBack)\n | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by Id\n | where IsActive and (ValidUntil > now() or isempty(ValidUntil))\n | extend IndicatorType = replace(@\"\\[|\\]|\\\"\"\", \"\", tostring(split(ObservableKey, \":\", 0)))\n | where IndicatorType == \"domain-name\"\n | extend DomainName = tolower(ObservableValue)\n | extend parts = split(DomainName, '.')\n | extend tld = parts[(array_length(parts)-1)]\n | summarize count() by tostring(tld)\n | summarize make_list(tld);\n// Fetch the latest active domain indicators from the threat intelligence data within the specified time range\nlet Domain_Indicators = ThreatIntelIndicators\n| extend IndicatorType = replace(@\"\\[|\\]|\\\"\"\", \"\", tostring(split(ObservableKey, \":\", 0)))\n| where IndicatorType == \"domain-name\"\n| extend DomainName = tolower(ObservableValue)\n| extend TrafficLightProtocolLevel = tostring(parse_json(AdditionalFields).TLPLevel)\n | where TimeGenerated >= ago(ioc_lookBack)\n | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by Id, ObservableValue\n | where IsActive and (ValidUntil > now() or isempty(ValidUntil))\n | extend IndicatorId = tostring(split(Id, \"--\")[2])\n | extend Url = iff(ObservableKey == \"url:value\", ObservableValue, \"\");\n// Join the threat intelligence indicators with syslog data on matching domain entities\nDomain_Indicators\n| project-reorder *, IsActive, Tags, TrafficLightProtocolLevel, DomainName, Type\n | join kind=innerunique (\n   Syslog\n   | where TimeGenerated > ago(dt_lookBack)\n   // Extract domain patterns from syslog messages\n   | extend domain = extract(\"(([a-z0-9]+(-[a-z0-9]+)*\\\\.)+[a-z]{2,})\",1, tolower(SyslogMessage))\n   | where isnotempty(domain)\n   | extend parts = split(domain, '.')\n   // Split out the top-level domain (TLD)\n   | extend tld = parts[(array_length(parts)-1)]\n   // Validate parsed domain by checking if the TLD is in the list of TLDs in our threat feed\n   | where tld in~ (list_tlds)\n   | extend Syslog_TimeGenerated = TimeGenerated\n ) on $left.DomainName==$right.domain\n | where Syslog_TimeGenerated < ValidUntil\n // Retrieve the latest syslog timestamp for each indicator and domain combination\n | summarize Syslog_TimeGenerated = arg_max(Syslog_TimeGenerated, *) by IndicatorId, domain\n // Select the desired columns for the final result set\n | extend ActivityGroupNames = extract(@\"ActivityGroup:(\\S+)\", 1, tostring(parse_json(Data).labels))\n | extend Description = tostring(parse_json(Data).description)\n | project Syslog_TimeGenerated, Description, ActivityGroupNames, Id, ValidUntil, Confidence, SyslogMessage, Computer, ProcessName, domain, HostIP, Type, DomainName, Url\n // Extract the hostname from the Computer field\n | extend HostName = tostring(split(Computer, '.', 0)[0])\n // Extract the DNS domain from the Computer field\n | extend DnsDomain = tostring(strcat_array(array_slice(split(Computer, '.'), 1, -1), '.'))\n // Assign the Syslog_TimeGenerated value to the timestamp field\n | extend timestamp = Syslog_TimeGenerated\n",
        "queryFrequency": "1h",
        "queryPeriod": "14d",
        "description": "Identifies a match in Syslog table from any Domain IOC from TI\n",
        "triggerThreshold": 0,
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "Computer"
              },
              {
                "identifier": "HostName",
                "columnName": "HostName"
              },
              {
                "identifier": "DnsDomain",
                "columnName": "DnsDomain"
              }
            ]
          },
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "HostIP"
              }
            ]
          },
          {
            "entityType": "URL",
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "Url"
              }
            ]
          }
        ],
        "severity": "Medium",
        "tactics": [
          "CommandAndControl"
        ],
        "triggerOperator": "gt",
        "name": "TI map Domain entity to Syslog"
      }
    }
  ]
}
