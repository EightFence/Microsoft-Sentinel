{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/88b9223c-29ff-48a9-a745-c553aa0dbae2')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/88b9223c-29ff-48a9-a745-c553aa0dbae2')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "queryPeriod": "3h",
        "severity": "Informational",
        "query": "let action_results_lookup = union isfuzzy=true (datatable(JobResult:string, JobResultMessage:string)[]), (_GetWatchlist(\"action_results_lookup\")); \nVeeam_GetSecurityEvents\n| where instanceId == 42210\n| extend Result = extract(\"Result=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend SessionID = extract(\"SessionID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (action_results_lookup)\n    on $left.Result == $right.JobResult\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"Session ID\"] = SessionID,\n    [\"StateMessage\"] = JobResultMessage,\n    MessageDetails = Description,\n    Severity = SeverityDescription\n",
        "triggerOperator": "gt",
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        },
        "name": "Malware Detection Session Finished",
        "customDetails": {
          "MessageDetails": "MessageDetails",
          "Severity": "Severity",
          "EventId": "EventId",
          "VbrHostName": "DataSource",
          "Date": "Date"
        },
        "queryFrequency": "3h",
        "description": "Detects when malware detection session finishes.",
        "triggerThreshold": 0,
        "status": "Available",
        "tactics": []
      }
    }
  ]
}
