{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/5ee34fa1-64ed-48c7-afa2-794b244f6c60')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/5ee34fa1-64ed-48c7-afa2-794b244f6c60')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "columnName": "DeviceName",
                "identifier": "FullName"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "columnName": "AccountSid",
                "identifier": "Sid"
              },
              {
                "columnName": "AccountName",
                "identifier": "Name"
              },
              {
                "columnName": "AccountDomain",
                "identifier": "NTDomain"
              }
            ]
          },
          {
            "entityType": "Process",
            "fieldMappings": [
              {
                "columnName": "ProcessCommandLine",
                "identifier": "CommandLine"
              }
            ]
          }
        ],
        "queryFrequency": "1h",
        "name": "Suspicious parentprocess relationship - Office child processes.",
        "queryPeriod": "1h",
        "triggerOperator": "gt",
        "query": "let browsers = dynamic([\"iexplore.exe\", \"chrome.exe\", \"firefox.exe\", \"msedge.exe\"]); // Customize this list for your environment.\nlet officeApps = dynamic([\"winword.exe\", \"excel.exe\", \"powerpnt.exe\"]); // Consider adding other Office applications such as Publisher, Visio and Access. \n// This is an allow-list of the most common child processes. This is a quick and dirty solution. Consider allow-listing the full process path instead of file name.\n// Also, make this list as short as possible. Remove anything from this list if it doesn't occur in your organization. \nlet allowList = dynamic([\"MSOSYNC.exe\", \"splwow64.exe\", \"csc.exe\", \"outlook.exe\", \"AcroRd32.exe\", \"Acrobat.exe\", \"explorer.exe\", \"DW20.exe\", \n\"Microsoft.Mashup.Container.Loader.exe\", \"Microsoft.Mashup.Container.NetFX40.exe\", \"WerFault.exe\", \"CLVIEW.exe\"]); \nDeviceProcessEvents\n| where InitiatingProcessParentFileName in~ (browsers) and InitiatingProcessFileName in~ (officeApps) and \nFileName !in~ (officeApps) and FileName !in~ (browsers) and FileName !in~ (allowList)\n| project-rename ProcessStart_Timestamp = Timestamp\n",
        "severity": "Medium",
        "status": "Available",
        "description": "The attacker sends a spearphishing email to a user. The email contains a link, which points to a website that eventually \npresents the user a download of an MS Office document. This document contains a malicious macro. The macro spawns a new child process providing initial access. \nThis detection looks for suspicious parent-process chains starting with a browser which spawns an Office application which spawns something else.\n"
      }
    }
  ]
}
