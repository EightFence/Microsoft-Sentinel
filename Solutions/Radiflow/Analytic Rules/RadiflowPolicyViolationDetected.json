{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/a3f4cc3e-2403-4570-8d21-1dedd5632958')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/a3f4cc3e-2403-4570-8d21-1dedd5632958')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "NetBiosName",
                "columnName": "SourceHostName"
              },
              {
                "identifier": "HostName",
                "columnName": "SourceHostName"
              }
            ]
          },
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "NetBiosName",
                "columnName": "DestinationHostName"
              },
              {
                "identifier": "HostName",
                "columnName": "DestinationHostName"
              }
            ]
          },
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "SourceIP"
              }
            ]
          },
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "DestinationIP"
              }
            ]
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        },
        "suppressionDuration": "5h",
        "query": "RadiflowEvent\n| where DeviceProduct =~ 'iSID'\n| where EventClassID in (5, 156, 161, 169, 171, 182, 183, 184, 185)\n| extend EventMessage = iif(EventMessage == ' ', 'Policy Violation', EventMessage)\n",
        "tactics": [
          "LateralMovement",
          "ImpairProcessControl",
          "Execution",
          "Collection",
          "Persistence"
        ],
        "incidentConfiguration": {
          "createIncident": true,
          "groupingConfiguration": {
            "groupByCustomDetails": [],
            "lookbackDuration": "1h",
            "groupByEntities": [],
            "matchingMethod": "AllEntities",
            "reopenClosedIncident": false,
            "enabled": true,
            "groupByAlertDetails": []
          }
        },
        "queryPeriod": "1h",
        "severity": "Medium",
        "suppressionEnabled": false,
        "customDetails": {
          "DestinationVendor": "DestinationVendor",
          "Protocol": "Protocol",
          "Port": "Port",
          "DestinationType": "DestinationType",
          "SourceVendor": "SourceVendor",
          "SourceMAC": "SourceMACAddress",
          "DestinationHostName": "DestinationHostName",
          "SourceIP": "SourceIP",
          "DestinationMAC": "DestinationMACAddress",
          "DestinationIP": "DestinationIP",
          "SourceVLAN": "SourceVLAN",
          "SourceType": "SourceType",
          "SourceHostName": "SourceHostName"
        },
        "description": "'Generates an incident when an unauthorized session or action is detected either by Radiflow's iSID.'\n",
        "name": "Radiflow - Policy Violation Detected",
        "alertDetailsOverride": {
          "alertDisplayNameFormat": "Policy Violation Detected",
          "alertDescriptionFormat": "Recent activity which violates the security policy has been detected in the network. Please check the details for additional information.",
          "alertDynamicProperties": [],
          "alertSeverityColumnName": "EventSeverity"
        },
        "status": "Available",
        "triggerThreshold": {
          "IsPowerOfTwo": false,
          "IsZero": true,
          "IsOne": false,
          "IsEven": true,
          "Sign": 0
        },
        "queryFrequency": "1h",
        "triggerOperator": "gt"
      }
    }
  ]
}
