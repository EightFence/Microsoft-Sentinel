{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/6e9e1975-6d85-4387-bd30-3881c66e302e')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/6e9e1975-6d85-4387-bd30-3881c66e302e')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "entityMappings": [
          {
            "entityType": "URL",
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "subject_s"
              }
            ]
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        },
        "suppressionDuration": "5h",
        "query": "CBSLog_Azure_1_CL\n| where severity_s == \"High\"\n| where type_s == \"Brand Abuse\"\n| where status_s != \"Closed\" or status_s != \"Resolved\" \n| where remarks_s == \"New Brand Abuse with severity High found\"",
        "tactics": [
          "ResourceDevelopment",
          "InitialAccess"
        ],
        "incidentConfiguration": {
          "createIncident": true,
          "groupingConfiguration": {
            "groupByCustomDetails": [],
            "lookbackDuration": "PT5H",
            "groupByEntities": [],
            "matchingMethod": "AllEntities",
            "reopenClosedIncident": false,
            "enabled": true,
            "groupByAlertDetails": []
          }
        },
        "queryPeriod": "5m",
        "severity": "High",
        "suppressionEnabled": false,
        "description": "'New Brand Abuse with severity High found'\n",
        "name": "Brand Abuse",
        "status": "Available",
        "triggerThreshold": {
          "IsPowerOfTwo": false,
          "IsZero": true,
          "IsOne": false,
          "IsEven": true,
          "Sign": 0
        },
        "queryFrequency": "5m",
        "triggerOperator": "gt"
      }
    }
  ]
}
