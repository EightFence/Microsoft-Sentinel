{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/22cc1dff-14ad-481d-97e1-0602895e429e')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/22cc1dff-14ad-481d-97e1-0602895e429e')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "tactics": [
          "CommandAndControl"
        ],
        "queryPeriod": "1d",
        "triggerOperator": "gt",
        "name": "Detection of Malware C2 IPs in DNS Events",
        "severity": "Medium",
        "description": "'Identifies a match in DnsEvents from Recorded Future Actively Communicating C&C Server Risklist.'\n",
        "queryFrequency": "1h",
        "query": "// Identifies a match in DnsEvent from the Recorded Future C2 Malware Detection IPs (Actively Communicating C&C Server RiskList)\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\nThreatIntelligenceIndicator\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == \"Recorded Future - IP - Actively Communicating C&C Server\"\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n| extend TI_ipEntity = NetworkIP\n| join (\n  DnsEvents | where TimeGenerated >= ago(dt_lookBack)\n  | where SubType =~ \"LookupQuery\" and isnotempty(IPAddresses)\n  | extend SingleIP = split(IPAddresses, \",\")\n  | mvexpand SingleIP\n  | extend SingleIP = tostring(SingleIP)\n  // renaming time column so it is clear the log this came from\n  | extend DNS_TimeGenerated = TimeGenerated\n  )\non $left.TI_ipEntity == $right.SingleIP\n| where DNS_TimeGenerated >= TimeGenerated and DNS_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, DNS_TimeGenerated, TI_ipEntity, Computer, EventId, SubType, ClientIP, Name, IPAddresses, NetworkIP, Description, AdditionalInformation\n| extend timestamp = DNS_TimeGenerated, IPCustomEntity = ClientIP, HostCustomEntity = Computer, URLCustomEntity = Url\n",
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ],
            "entityType": "Host"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "URLCustomEntity"
              }
            ],
            "entityType": "URL"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "TI_ipEntity"
              }
            ],
            "entityType": "IP"
          }
        ],
        "status": "Available",
        "triggerThreshold": 0
      }
    }
  ]
}
