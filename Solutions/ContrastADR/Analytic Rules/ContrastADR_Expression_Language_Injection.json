{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/35cc9938-3615-4722-869a-5991bd059887')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/35cc9938-3615-4722-869a-5991bd059887')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "status": "Available",
        "name": "SQL Injection",
        "description": "'Expression Language Injection works by taking advantage of server-side code injection vulnerabilities which occur whenever an application incorporates user-controllable data into a string that is dynamically evaluated by a code interpreter. This can lead to complete compromise of the application's data and functionality, as well as the server that is hosting the application.'\n",
        "tactics": [
          "Impact"
        ],
        "queryPeriod": "5m",
        "queryFrequency": "5m",
        "severity": "Medium",
        "triggerOperator": "gt",
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "uiUrl_s",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          }
        ],
        "query": "ContrastADR_CL | where rule_s == \"expression-language-injection\"",
        "triggerThreshold": 0
      }
    }
  ]
}
