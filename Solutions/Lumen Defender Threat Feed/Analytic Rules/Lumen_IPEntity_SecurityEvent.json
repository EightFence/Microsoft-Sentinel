{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/140a2cb5-4b4a-485c-aab3-2415c24d37e6')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/140a2cb5-4b4a-485c-aab3-2415c24d37e6')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "description": "This query maps Lumen IP indicators of compromise (IOCs) from threat intelligence (TI), by searching for matches in SecurityEvents.\n",
        "suppressionDuration": "5h",
        "queryPeriod": "14d",
        "tactics": [
          "CommandAndControl"
        ],
        "name": "Lumen TI IPAddress in SecurityEvents",
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "SE_ipEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          }
        ],
        "triggerOperator": "gt",
        "query": "let dt_lookBack = 1d;  // Data lookback for SecurityEvent\nlet ioc_lookBack = 14d; // TI lookback\nlet IP_Indicators = ThreatIntelIndicators\n  | where TimeGenerated >= ago(ioc_lookBack)\n  | where IsActive == true and ValidUntil > now()\n  | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by Id\n  | where SourceSystem == 'Lumen'\n  | where ObservableKey == 'ipv4-addr:value'\n  | extend TI_ipEntity = ObservableValue\n  | where ipv4_is_private(TI_ipEntity) == false and TI_ipEntity !startswith 'fe80' and TI_ipEntity !startswith '::' and TI_ipEntity !startswith '127.';\nIP_Indicators\n| join kind=innerunique (\n    SecurityEvent\n    | where TimeGenerated >= ago(dt_lookBack)\n    | extend SE_ipEntity = IpAddress\n    | extend SecurityEvent_TimeGenerated = TimeGenerated\n  ) on $left.TI_ipEntity == $right.SE_ipEntity\n| where SecurityEvent_TimeGenerated < ValidUntil\n| summarize arg_max(SecurityEvent_TimeGenerated, *), StartTime = min(SecurityEvent_TimeGenerated), EndTime = max(SecurityEvent_TimeGenerated) by Id, SE_ipEntity\n| project timestamp = EndTime, StartTime, EndTime, Computer, IpAddress, EventID, Activity, Id, Tags, ValidUntil, Confidence, TI_ipEntity, SE_ipEntity, Type\n",
        "triggerThreshold": 0,
        "displayName": "Lumen TI IPAddress in SecurityEvents",
        "suppressionEnabled": true,
        "queryFrequency": "4h",
        "severity": "Medium"
      }
    }
  ]
}
