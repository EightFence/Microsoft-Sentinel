{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/a7cd18cd-1503-47ec-8dca-65d750540637')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/a7cd18cd-1503-47ec-8dca-65d750540637')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "triggerThreshold": 0,
        "query": "let dt_lookBack = 1d;  // Data lookback for AAD sign-in logs\nlet ioc_lookBack = 14d; // TI lookback\nlet IP_Indicators =\n    ThreatIntelIndicators\n    | where TimeGenerated >= ago(ioc_lookBack)\n    | where IsActive == true and ValidUntil > now()\n    | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by Id\n    | where SourceSystem == 'Lumen'\n    | where ObservableKey == 'ipv4-addr:value'\n    | extend TI_ipEntity = ObservableValue\n    | where ipv4_is_private(TI_ipEntity) == false and TI_ipEntity !startswith 'fe80' and TI_ipEntity !startswith '::' and TI_ipEntity !startswith '127.';\nlet SignInUnion =\n    union isfuzzy=true\n    (\n        AADNonInteractiveUserSignInLogs\n        | where TimeGenerated >= ago(dt_lookBack)\n        | extend\n            ILE_ipEntity = IPAddress,\n            AccountDisplayName = coalesce(UserDisplayName, UserPrincipalName),\n            Application = coalesce(column_ifexists('AppDisplayName',''), column_ifexists('ResourceDisplayName','')),\n            LogonType = column_ifexists('ClientAppUsed',''),\n            IdentityLogonEvents_TimeGenerated = TimeGenerated\n        | project IdentityLogonEvents_TimeGenerated, ILE_ipEntity, AccountDisplayName, Application, LogonType, IPAddress, Type\n    ),\n    (\n        AADServicePrincipalSignInLogs\n        | where TimeGenerated >= ago(dt_lookBack)\n        | extend\n            ILE_ipEntity = IPAddress,\n            AccountDisplayName = coalesce(ServicePrincipalName, tostring(ServicePrincipalId)),\n            Application = coalesce(column_ifexists('AppDisplayName',''), column_ifexists('ResourceDisplayName','')),\n            LogonType = \"ServicePrincipal\",\n            IdentityLogonEvents_TimeGenerated = TimeGenerated\n        | project IdentityLogonEvents_TimeGenerated, ILE_ipEntity, AccountDisplayName, Application, LogonType, IPAddress, Type\n    ),\n    (\n        AADManagedIdentitySignInLogs\n        | where TimeGenerated >= ago(dt_lookBack)\n        | extend\n            ILE_ipEntity = IPAddress,\n            AccountDisplayName = coalesce(ServicePrincipalName, tostring(ServicePrincipalId)),\n            Application = ResourceDisplayName,\n            LogonType = \"ManagedIdentity\",\n            IdentityLogonEvents_TimeGenerated = TimeGenerated\n        | project IdentityLogonEvents_TimeGenerated, ILE_ipEntity, AccountDisplayName, Application, LogonType, IPAddress, Type\n    ),\n    (\n        ADFSSignInLogs\n        | where TimeGenerated >= ago(dt_lookBack)\n        | extend\n            ILE_ipEntity = IPAddress,\n            AccountDisplayName = coalesce(UserDisplayName, UserPrincipalName),\n            Application = coalesce(AppDisplayName, ResourceDisplayName),\n            LogonType = coalesce(Requirement, AuthenticationRequirement),\n            IdentityLogonEvents_TimeGenerated = TimeGenerated\n        | project IdentityLogonEvents_TimeGenerated, ILE_ipEntity, AccountDisplayName, Application, LogonType, IPAddress, Type\n    );\nIP_Indicators\n| join kind=innerunique (SignInUnion) on $left.TI_ipEntity == $right.ILE_ipEntity\n| where IdentityLogonEvents_TimeGenerated < ValidUntil\n| summarize arg_max(IdentityLogonEvents_TimeGenerated, *), StartTime = min(IdentityLogonEvents_TimeGenerated), EndTime = max(IdentityLogonEvents_TimeGenerated) by Id, ILE_ipEntity\n| project timestamp = EndTime, StartTime, EndTime, AccountDisplayName, IPAddress, Application, LogonType, Id, Tags, ValidUntil, Confidence, TI_ipEntity, ILE_ipEntity, Type\n",
        "queryFrequency": "4h",
        "displayName": "Lumen TI IPAddress in IdentityLogonEvents",
        "queryPeriod": "14d",
        "description": "This query maps Lumen IP indicators of compromise (IOCs) from threat intelligence (TI), by searching for matches in Azure AD sign-in logs.\n",
        "tactics": [
          "CommandAndControl"
        ],
        "suppressionEnabled": true,
        "severity": "Medium",
        "name": "Lumen TI IPAddress in IdentityLogonEvents",
        "suppressionDuration": "5h",
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "ILE_ipEntity"
              }
            ]
          }
        ],
        "triggerOperator": "gt"
      }
    }
  ]
}
