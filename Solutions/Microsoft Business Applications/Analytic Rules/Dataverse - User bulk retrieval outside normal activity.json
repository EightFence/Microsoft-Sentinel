{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/08cb7ffc-59c6-4e7d-88e0-327371c9431b')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/08cb7ffc-59c6-4e7d-88e0-327371c9431b')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "description": "Identifies users retrieving significantly more records from Dataverse than they have previously in the past 2 weeks.",
        "triggerOperator": "gt",
        "triggerThreshold": 0,
        "customDetails": {},
        "severity": "Low",
        "tactics": [
          "Exfiltration"
        ],
        "name": "Dataverse - User bulk retrieval outside normal activity",
        "alertDetailsOverride": {
          "alertDescriptionFormat": "{{UserId}} exported {{CurrentExportRate}} records, far beyond the historical baseline of {{{HistoricalBaseline}}.",
          "alertDisplayNameFormat": "Dataverse - Bulk record retrieval outside of normal activity"
        },
        "queryPeriod": "14d",
        "status": "Available",
        "queryFrequency": "1d",
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountName",
                "identifier": "Name"
              },
              {
                "columnName": "UPNSuffix",
                "identifier": "UPNSuffix"
              }
            ],
            "entityType": "Account"
          },
          {
            "fieldMappings": [
              {
                "columnName": "CloudAppId",
                "identifier": "AppId"
              },
              {
                "columnName": "InstanceUrl",
                "identifier": "InstanceName"
              }
            ],
            "entityType": "CloudApplication"
          }
        ],
        "query": "let baseline_time = 14d;\nlet detection_time = 1d;\nDataverseActivity\n| where TimeGenerated between(ago(baseline_time) .. ago(detection_time - 1d))\n| where Message == \"RetrieveMultiple\"\n| extend numQueryCount = todouble(QueryResults)\n| extend QueryCount = iif(QueryResults contains \",\", todouble(countof(tostring(QueryResults), ',') + 1), numQueryCount)\n| extend QueryCount = iif(isnotempty(QueryCount), QueryCount, double(1))\n| summarize sum(QueryCount) by UserId\n| extend HistoricalBaseline = sum_QueryCount\n| join kind=inner (\n    DataverseActivity\n    | where TimeGenerated > ago(detection_time)\n    | where Message == \"RetrieveMultiple\"\n    | extend numQueryCount = todouble(QueryResults)\n    | extend QueryCount = iif(QueryResults contains \",\", todouble(countof(tostring(QueryResults), ',') + 1), numQueryCount)\n    | extend QueryCount = iif(isnotempty(QueryCount), QueryCount, double(1))\n    | summarize sum(QueryCount) by UserId\n    | extend CurrentExportRate = sum_QueryCount)\n    on UserId\n| where CurrentExportRate > HistoricalBaseline\n| project UserId, HistoricalBaseline, CurrentExportRate\n| join kind=inner(\n    DataverseActivity\n    | where TimeGenerated > ago(detection_time)\n    | where Message == \"RetrieveMultiple\"\n    | extend numQueryCount = todouble(QueryResults)\n    | extend QueryCount = iif(QueryResults contains \",\", todouble(countof(tostring(QueryResults), ',') + 1), numQueryCount)\n    | extend QueryCount = iif(isnotempty(QueryCount), QueryCount, double(1)))\n    on UserId\n| summarize\n    QuerySizes = make_set(QueryCount),\n    MostRecentQuery = max(TimeGenerated),\n    IPs = make_set(ClientIp),\n    UserAgents = make_set(UserAgent),\n    Entities = make_set(EntityName),\n    Queries = make_set(Query)\n    by UserId, InstanceUrl, HistoricalBaseline, CurrentExportRate\n| extend\n    AccountName = tostring(split(UserId, '@')[0]),\n    UPNSuffix = tostring(split(UserId, '@')[1]),\n    CloudAppId = int(32780)\n| project\n    MostRecentQuery,\n    UserId,\n    IPs,\n    UserAgents,\n    InstanceUrl,\n    Queries,\n    QuerySizes,\n    Entities,\n    HistoricalBaseline,\n    CurrentExportRate,\n    AccountName,\n    UPNSuffix,\n    CloudAppId\n",
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        }
      }
    }
  ]
}
