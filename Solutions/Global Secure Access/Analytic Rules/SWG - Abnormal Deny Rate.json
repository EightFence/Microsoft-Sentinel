{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/e3b6a9e7-4c3a-45e6-8baf-1d3bfa8e0c2b')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/e3b6a9e7-4c3a-45e6-8baf-1d3bfa8e0c2b')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "triggerOperator": "gt",
        "queryPeriod": "25h",
        "query": "let NumOfStdsThreshold = 3;\nlet LearningPeriod = 5d;\nlet BinTime = 1h;\nlet MinThreshold = 5.0;\nlet MinLearningBuckets = 5;\nlet TrafficLogs = NetworkAccessTraffic\n  | where Action == 'Denied'\n  | where isnotempty(DestinationIp) and isnotempty(SourceIp);\nlet LearningSrcIpDenyRate = TrafficLogs\n  | where TimeGenerated between (ago(LearningPeriod + 1d) .. ago(1d))\n  | summarize count() by SourceIp, bin(TimeGenerated, BinTime), DestinationIp\n  | summarize LearningTimeSrcIpDenyRateAvg = avg(count_), LearningTimeSrcIpDenyRateStd = stdev(count_), LearningTimeBuckets = count() by SourceIp, DestinationIp\n  | where LearningTimeBuckets > MinLearningBuckets;\nlet AlertTimeSrcIpDenyRate = TrafficLogs\n  | where TimeGenerated between (ago(1h) .. now())\n  | summarize AlertTimeSrcIpDenyRateCount = count() by SourceIp, DestinationIp;\nAlertTimeSrcIpDenyRate\n  | join kind=leftouter (LearningSrcIpDenyRate) on SourceIp, DestinationIp\n  | extend LearningThreshold = max_of(LearningTimeSrcIpDenyRateAvg + NumOfStdsThreshold * LearningTimeSrcIpDenyRateStd, MinThreshold)\n  | where AlertTimeSrcIpDenyRateCount > LearningThreshold\n  | project SourceIp, DestinationIp, AlertTimeSrcIpDenyRateCount, LearningThreshold    \n",
        "configurableParameters": [
          {
            "minimumOfStdsThreshold": "The number of stds to use in the threshold calculation. Default is set to 3."
          },
          {
            "learningPeriodTime": "Learning period for threshold calculation in days. Default is set to 5."
          },
          {
            "binTime": "Learning buckets time in hours. Default is set to 1 hour."
          },
          {
            "minimumThreshold": "Minimum threshold for alert. Default is set to 5."
          },
          {
            "minimumBucketThreshold": "Minimum learning buckets threshold for alert. Default is set to 5."
          }
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "SourceIp",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "DestinationIp",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          }
        ],
        "description": "Identifies abnormal deny rate for specific source IP to destination IP based on the normal average and standard deviation learned during a configured period. This can indicate potential exfiltration, initial access, or C2, where an attacker tries to exploit the same vulnerability on machines in the organization but is being blocked by firewall rules.\n",
        "triggerThreshold": 1,
        "tactics": [
          "InitialAccess",
          "Exfiltration",
          "CommandAndControl"
        ],
        "queryFrequency": "1h",
        "name": "Detect Abnormal Deny Rate for Source to Destination IP",
        "status": "Available",
        "severity": "Medium"
      }
    }
  ]
}
