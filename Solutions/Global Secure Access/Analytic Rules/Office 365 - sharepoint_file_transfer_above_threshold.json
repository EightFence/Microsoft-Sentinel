{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "Parameters": {
    "Workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/30375d00-68cc-4f95-b89a-68064d566358')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/30375d00-68cc-4f95-b89a-68064d566358')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "name": "GSA Enriched Office 365 - Sharepoint File Transfer Above Threshold",
        "triggerOperator": "gt",
        "tactics": [
          "Exfiltration"
        ],
        "severity": "Medium",
        "description": "'Identifies Office365 SharePoint file transfers above a certain threshold in a 15-minute time period.\nPlease note that entity mapping for arrays is not supported, so when there is a single value in an array, we will pull that value from the array as a single string to populate the entity to support entity mapping features within Sentinel. Additionally, if the array is multivalued, we will input a string to indicate this with a unique hash so that matching will not occur.'\n",
        "query": "let threshold = 5000;\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload has_any(\"SharePoint\", \"OneDrive\")\n    | where Operation has_any(\"FileDownloaded\", \"FileSyncDownloadedFull\", \"FileSyncUploadedFull\", \"FileUploaded\")\n    | extend ClientIP = ClientIp\n    | summarize TransferCount = dcount(ObjectId), fileslist = make_set(ObjectId, 10000)\n        by UserId, ClientIP, bin(TimeGenerated, 15m)\n    | where TransferCount >= threshold\n    | extend FileSample = iff(array_length(fileslist) == 1, tostring(fileslist[0]),\n             strcat(\"SeeFilesListField_\", tostring(hash(tostring(fileslist)))))\n    | extend AccountName = tostring(split(UserId, \"@\")[0]),\n             AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where EventSource == \"SharePoint\"\n    | where OfficeWorkload has_any(\"SharePoint\", \"OneDrive\")\n    | where Operation has_any(\"FileDownloaded\", \"FileSyncDownloadedFull\", \"FileSyncUploadedFull\", \"FileUploaded\")\n    | summarize TransferCount = dcount(OfficeObjectId), fileslist = make_set(OfficeObjectId, 10000)\n        by UserId, ClientIP, bin(TimeGenerated, 15m)\n    | where TransferCount >= threshold\n    | extend FileSample = iff(array_length(fileslist) == 1, tostring(fileslist[0]),\n             strcat(\"SeeFilesListField_\", tostring(hash(tostring(fileslist)))))\n    | extend AccountName = tostring(split(UserId, \"@\")[0]),\n             AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(TimeGenerated, *) by UserId, ClientIP;\n// Final Output\nCombinedEvents\n    | project TimeGenerated, UserId, ClientIP, AccountName, AccountUPNSuffix, FileSample, TransferCount, fileslist\n    | order by TimeGenerated desc\n",
        "queryFrequency": "15m",
        "status": "Available",
        "queryPeriod": "15m",
        "triggerThreshold": 0,
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "UserId"
              },
              {
                "identifier": "Name",
                "columnName": "AccountName"
              },
              {
                "identifier": "UPNSuffix",
                "columnName": "AccountUPNSuffix"
              }
            ],
            "entityType": "Account"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "ClientIP"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "FileSample"
              }
            ],
            "entityType": "File"
          }
        ],
        "incidentConfiguration": {
          "groupingConfiguration": {
            "groupByEntities": [
              "Account"
            ],
            "reopenClosedIncident": false,
            "lookbackDuration": "PT5H",
            "enabled": true,
            "matchingMethod": "Selected"
          },
          "createIncident": true
        },
        "customDetails": {
          "FilesList": "fileslist",
          "TransferCount": "TransferCount"
        }
      }
    }
  ]
}
